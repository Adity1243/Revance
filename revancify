#!/usr/bin/bash

if [ "$(getprop ro.product.cpu.abi)" = "armeabi-v7a" ]
then
    echo "CPU architecture \"armeabi-v7a\" of your device is not supported for patching."
    echo "You may get build errors."
    read -N 1 -s -r -p $'Press ENTER to CONTINUE or SPACE to EXIT...\n' key
    if [ "$key" = " " ]
    then
        echo "Script terminated"
        exit
    fi
fi

path=$(find "$HOME" -type d -name "Revancify")

checkdependencies()
{
    if bins=$(ls "$PATH") && grep -q java <<< "$bins" && grep -q python <<< "$bins" && grep -q wget <<< "$bins" && grep -q tput <<< "$bins" && grep -q dialog <<< "$bins" && grep -q jq <<< "$bins" && modules=$(pip list) && grep -q wheel <<< "$modules" && grep -q bs4 <<< "$modules" && grep -q requests <<< "$modules" && ls "$HOME/.dialog"* > /dev/null 2>&1 && ls "$PATH/revancify" > /dev/null 2>&1
    then
        return 0
    else
        if ping -c 1 google.com > /dev/null 2>&1
        then
            installdependencies
            checkdependencies
        else
            cp revancify "$PATH/revancify"
            echo "Dependencies not installed. Run again with internet connection."
            exit 1
        fi
    fi
}

installdependencies()
{
    clear
    echo "Installing dependencies..."
    sleep 1
    pkg update -y &&
    pkg install python openjdk-17 wget ncurses-utils dialog jq -y &&
    pip install wheel &&
    pip install requests bs4
    cp revancify "$PATH/revancify"
    wget -q "https://raw.githubusercontent.com/decipher3114/MyConfigs/main/.dialogrc" -O "$HOME/.dialogrc"
    sed -i '/allow-external-apps/s/# //' "$HOME/.termux/termux.properties" &&
    echo "Dependencies installed successfully."
    return 0
}

checkrevancify()
{
    if cd "$path" > /dev/null 2>&1 
    then
        tput civis
        rm -rf ./*cache*
        return 0
    else
        echo -e "\e[1;31mDo you want to install again?\e[0m"
        read -r -p "[Y/N]: " choice
        case "$choice" in
        y|Y ) rm -rf "$path"
            git clone https://github.com/decipher3114/Revancify.git && revancify && exit
        ;;
        n|N ) echo "Removing revancify completely !!"
            sleep 0.5s
            rm "$PATH/revancify"
            echo "Successfully Uninstalled revancify."
            exit 0
        ;;
        ? ) echo "Invalid option !!"
            exit 1
        ;;
        esac
    fi
}

help()
{
    echo -e "\e[1;34mrevancify\n\e[0m"
    echo -e "\e[1;33mUsage:\e[0m \e[1;32mrevancify [OPTION]\n\e[0m"
    echo -e "\e[1;33mOptions:\e[0m"
    echo -e "\e[1;33m-n         \e[1;34mRun revancify as non root in rooted device\e[0m"
    echo -e "\e[1;33m-f         \e[1;34mForce update check for resources on startup\e[0m"
    echo -e "\e[1;33m-r         \e[1;34mReinstall revancify\e[0m"
    echo -e "\e[1;33m-h,--help  \e[1;34mPrints help statement\e[0m"
    echo -e "\n\e[1;35mGithub repo: https://github.com/decipher3114/Revancify\nTelegram channel: https://t.me/revancify\nTelegram support group: https://t.me/revancifychat\e[0m"
}

while [ "${1:-}" != "" ]
do
    case "$1" in
    "-h" | "--help" ) help
        exit 0
    ;;
    "-n" | "-f" ) arg="$1"
    ;;
    "-c" ) echo -e "\e[1;31mAre you sure you want to clean resources?\e[0m"
        echo -e "\e[1;31mThis will delete the CLI, patches and integrations for the current selected source.\e[0m"
        read -r -p "[Y/N]: " choice
        case "$choice" in
        y|Y ) arg="$1"
        ;;
        ? ) :
        ;;
        esac
    ;;
    "-r" ) if ping -c 1 google.com > /dev/null 2>&1
        then
            cd "$path"/.. && rm -rf "$path" && git clone https://github.com/decipher3114/Revancify.git && revancify && exit
        fi
    ;;
    * ) echo -e "\e[1;31mInvalid option: $1\n\e[0m"
        help
        exit 1
    ;;
    esac
    shift
done

checkrevancify
checkdependencies
if ping -c 1 google.com > /dev/null 2>&1
then
    if [ "$arg" == "-f" ]
    then
        git fetch --all > /dev/null 2>&1
        git reset --hard origin/main > /dev/null 2>&1
    fi
    (git pull && cp revancify "$PATH/revancify") 2>&1 | dialog --no-collapse --no-shadow --progressbox "\n  █▀█ █▀▀ █░█ ▄▀█ █▄░█ █▀▀ █ █▀▀ █▄█\n  █▀▄ ██▄ ▀▄▀ █▀█ █░▀█ █▄▄ █ █▀░ ░█░  \n\n              by decipher\n         CONNECTED TO INTERNET" 20 42
    tput civis
    sleep 0.5
    
else
    sleep 2 | dialog --no-collapse --no-shadow --progressbox "\n  █▀█ █▀▀ █░█ ▄▀█ █▄░█ █▀▀ █ █▀▀ █▄█\n  █▀▄ ██▄ ▀▄▀ █▀█ █░▀█ █▄▄ █ █▀░ ░█░  \n\n              by decipher\n       NOT CONNECTED TO INTERNET" 20 42 && tput civis
fi
bash main.sh "$arg"
cd "$HOME" || :